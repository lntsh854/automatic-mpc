#include <string.h>
#include "low_lvl_main.h"
#include "obl_macierzowe.h"
#include "mat_lib.h"
#include "alokacja_nr.h"
#include "pk.h"

#define __FUN_WRITE() {write_string((char*)__func__);write_string((char*)"\r\n");}while(0)

char str[100];

extern void timer_loop(void);

long get_time(){
    // TODO
    return 0;
}

float* measureOutput(){
    return __measureOutput(); // values from -1 to 1
}

void setControlValue(float* value){ // values from -1 to 1
    __setControlValue(value);
}

void hardware_setup(){
    printf("\033[33m TEST\n");
}

void printMat2(float ** A, long x, long y, const char * fmat){
    long i = 1;
    long j = 1;
    for(i=1; i<=x; ++i){
        if(i==1) write_string("[");
        else     write_string(" ");
        for(j=1; j<=y; ++j){
            sprintf(str,fmat,A[i][j]);
            write_string(str);
            if(j==y && i!=x) write_string(";\n\r");
            if(j!=y) write_string(",");
        }
        if(i==x) write_string("]\n\r");
    }
}

void printVec2(float * A, long x, const char * fmat){
    long i = 1;
    write_string("[");
    for(i=1; i<=x; ++i){
        if(i!=1) write_string(" ");
        sprintf(str,fmat,A[i]);
        write_string(str);
        if(i!=x) write_string(";\n\r");
    }
    write_string("]\n\r");
}
//////////////////////////////////////////////////// TUTAJ ZACZYNA SIE ROBOTA SPECJALISTY MATLAB
#MPC_BEGIN
global MPC_CROSSCOMPILER

S(:,:, 1) = [  0.041951755673603,   0.475812909820202;   0.058235466415751,   0.144513027342894  ];
S(:,:, 2) = [  0.082143561543107,   0.906346234610091;   0.113079563282842,   0.278584047149884  ];
S(:,:, 3) = [  0.120649250592694,   1.295908896591411;   0.164729788588728,   0.402967562481246  ];
S(:,:, 4) = [  0.157539558383229,   1.648399769821804;   0.213372138933447,   0.518363558636564  ];
S(:,:, 5) = [  0.192882252994611,   1.967346701436834;   0.259181779318282,   0.625421442418056  ];
% S(:,:, 6) = [  0.226742259516809,   2.255941819529870;   0.302323673928969,   0.724743696756453  ];
% S(:,:, 7) = [  0.259181779318282,   2.517073481042955;   0.342953180184943,   0.816889271266370  ];
% S(:,:, 8) = [  0.290260404310874,   2.753355179413894;   0.381216608193859,   0.902376727811947  ];
% S(:,:, 9) = [  0.320035226421106,   2.967151701297007;   0.417251747626010,   0.981687158784902  ];
% S(:,:,10) = [  0.348560942468944,   3.160602794142791;   0.451188363905974,   1.055266894517971  ];
% S(:,:,11) = [  0.375889954646729,   3.335644581509606;   0.483148665508301,   1.123530015070102  ];
% S(:,:,12) = [  0.402072466782830,   3.494028940438993;   0.513247744040028,   1.186860680518802  ];
% S(:,:,13) = [  0.427156576566877,   3.637341034829941;   0.541593988694777,   1.245615292873687  ];
% S(:,:,14) = [  0.451188363905973,   3.767015180291971;   0.568289476570921,   1.300124501777690  ];
% S(:,:,15) = [  0.474211975574220,   3.884349199257855;   0.593430340259401,   1.350695065283301  ];
% S(:,:,16) = [  0.496269706311037,   3.990517410026728;   0.617107114024889,   1.397611576175597  ];
% S(:,:,17) = [  0.517402076517268,   4.086582379736333;   0.639405059826923,   1.441138063557186  ];
% S(:,:,18) = [  0.537647906691804,   4.173505558892074;   0.660404474355062,   1.481519478708218  ];
% S(:,:,19) = [  0.557044388745448,   4.252156903886833;   0.680180978183697,   1.518983073583316  ];
% S(:,:,20) = [  0.575627154323050,   4.323323583816946;   0.698805788087799,   1.553739679703141  ];
% S(:,:,21) = [  0.593430340259400,   4.387717858735101;   0.716345973500231,   1.585984894637695  ];
% S(:,:,22) = [  0.610486651289137,   4.445984208188342;   0.732864698034151,   1.615900182758493  ];
% S(:,:,23) = [  0.626827420125862,   4.498705781385993;   0.748421446940245,   1.643653896454204  ];
% S(:,:,24) = [  0.642482665020829,   4.546410233552949;   0.763072241317879,   1.669402223556828  ];
% S(:,:,25) = [  0.657481144906952,   4.589575006880517;   0.776869839851571,   1.693290066310144  ];
% S(:,:,26) = [  0.671850412229417,   4.628632108928340;   0.789863928799236,   1.715451856826974  ];
% S(:,:,27) = [  0.685616863559961,   4.663972436301259;   0.802101300916386,   1.736012313624341  ];
% S(:,:,28) = [  0.698805788087794,   4.695949686873918;   0.813626023960591,   1.755087143494038  ];
% S(:,:,29) = [  0.711441414076237,   4.724883899717970;   0.824479599383004,   1.772783692658475  ];
% S(:,:,30) = [  0.723546953370430,   4.751064658160684;   0.834701111778414,   1.789201550876274  ];
% S(:,:,31) = [  0.735144644037856,   4.774753988032212;   0.844327369632003,   1.804433111897304  ];
% S(:,:,32) = [  0.746255791220024,   4.796188980108166;   0.853393037869650,   1.818564093421180  ];
% S(:,:,33) = [  0.756900806270352,   4.815584162993793;   0.861930762689108,   1.831674019485384  ];
% S(:,:,34) = [  0.767099244250148,   4.833133650198359;   0.869971289121575,   1.843836667997699  ];
% S(:,:,35) = [  0.776869839851562,   4.849013082888393;   0.877543571747018,   1.855120485931503  ];
% S(:,:,36) = [  0.786230541813520,   4.863381387763519;   0.884674878961938,   1.865588974520507  ];
% S(:,:,37) = [  0.795198545893837,   4.876382367648279;   0.891390891175042,   1.875301046620661  ];
% S(:,:,38) = [  0.803790326458097,   4.888146140719143;   0.897715793284463,   1.884311358250331  ];
% S(:,:,39) = [  0.812021666743323,   4.898790442770943;   0.903672361769508,   1.892670616174548  ];
% S(:,:,40) = [  0.819907687852038,   4.908421805556289;   0.909282046710588,   1.900425863264281  ];
% S(:,:,41) = [  0.827462876529963,   4.917136622991149;   0.914565049032680,   1.907620743236649  ];
% S(:,:,42) = [  0.834701111778403,   4.925022115897562;   0.919540393250469,   1.914295746265929  ];
% S(:,:,43) = [  0.841635690350193,   4.932157204938941;   0.924225995977156,   1.920488436847567  ];
% S(:,:,44) = [  0.848279351176039,   4.938613300484597;   0.928638730443615,   1.926233665197529  ];
% S(:,:,45) = [  0.854644298766142,   4.944455017308723;   0.932794487260252,   1.931563763376677  ];
% S(:,:,46) = [  0.860742225630069,   4.949740821276762;   0.936708231640361,   1.936508727243874  ];
% S(:,:,47) = [  0.866584333756085,   4.954523614491446;   0.940394057291062,   1.941096385261796  ];
% S(:,:,48) = [  0.872181355189379,   4.958851264754822;   0.943865237165868,   1.945352555105425  ];
% S(:,:,49) = [  0.877543571747004,   4.962767084645297;   0.947134271261651,   1.949301188954561  ];
% S(:,:,50) = [  0.882680833905735,   4.966310265004490;   0.950212931632138,   1.952964508287993  ];
% Obiekt rzeczywisty -- 2xRC
% S(1,1,:)=[0.1784, 0.3805, 0.5334, 0.6467, 0.7305, 0.7926, 0.8385, 0.8724, 0.8975, 0.9161, 0.9299, 0.9401, 0.9476, 0.9532, 0.9573, 0.9603, 0.9626, 0.9643, 0.9655, 0.9664, 0.9671, 0.9676, 0.9679];
% a(1,:) = [-7.875594597027e-01,+3.526926067685e-02];
% b(1,1,:) = [+1.783577301464e-01,+6.167306699759e-02];


%% Code generation
if(MPC_CROSSCOMPILER == 1)
    generate(DMC_MIMO_A(S,10,5,[0.075, 0.150],[1 2],[],[],-1,1),'CONTROLLER');
    generate(DMC_MIMO_N(S,10,5,[0.075, 0.150],[1 2],[],[],-1,1),'CONTROLLER_N');
    % generate(GPC_MIMO_A(a,b,N,Nu,lambda*100,psi,[],[],[-1],[ 1]),'CONTROLLER');
    % generate(Constant([-1 -1]),'CONTROLLER');
    return;
end

%% Optional simulation
fprintf('Tutaj mozna przeprowadzic symulacje...\n');
#MPC_END

//////////////////////////////////////////////////// TUTAJ ZACZYNA SIE ROBOTA UZYTKOWNIKA KONCOWEGO
ArchiveData ad;
CurrentControl cc;

void measurements(){
    #MPC_PROFILER_BEGIN 4
    new_output(&ad,measureOutput());
    #MPC_PROFILER_END 4
}

void controller_setup(){
    #MPC_PROFILER_BEGIN 2
    init_archive_data(&ad, 100, 100, 2, 2, 0, 0, 0.01);
    init_current_control(&cc,&ad);
    get_time();
    CONTROLLER(NULL,NULL);
    CONTROLLER_N(NULL,NULL);
    #MPC_PROFILER_END 2
}

void idle(){
    #MPC_PROFILER_BEGIN 13
    const int k = 0;
    // Komunikacja z komputerem zbierajÄ…cym dane 
    sprintf(str, "y=[%8.4f,%8.4f];\n\r", ad.y[k][0],ad.y[k][1]);
    write_string(str);
    sprintf(str, "z=[%8.4f,%8.4f];\n\r", ad.z[0],ad.z[1]);
    write_string(str);
    sprintf(str, "u=[%8.4f,%8.4f];\n\r", ad.u[k-1][0],ad.u[k-1][1]);
    write_string(str);
    #MPC_PROFILER_END 13
}

void loop(){
    #MPC_PROFILER_BEGIN 10
    static int i = 0;
    if(i<50){ ad.z[0] =  0.1;}
    else    { ad.z[0] = -0.1;}
    if(++i >= 100) i = 0;
    CONTROLLER_N(&ad,&cc);

    // static float du[1] = {0};
    // if(i++<500) du[0] = 0.0f;
    // else      du[0] = 1.0f;
    // setCurrentControl(&cc,du);
    #MPC_PROFILER_END 10
    // string_spin();
}

void controls(){
    #MPC_PROFILER_BEGIN 3
    pushCurrentControlsToArchiveData(&cc,&ad);
    //projectOnFeasibleSet(&ad, NAN, NAN, 0.0, 1.0);
    setControlValue(last_control(&ad));
    #MPC_PROFILER_END 3
}

void timeout(){
    //setControlValue(0.0);
    // while(1);
}
